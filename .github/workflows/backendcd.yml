name: Backend Continuous Deployment

on:
  push:
    branches:
      - main  # Runs on merge to main
  workflow_dispatch:  # Allows manual runs

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: backend
  IMAGE_TAG: ${{ github.sha }}

jobs:

  lint:
    name: Lint backend Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install
          pipenv install --dev flake8

      - name: Run ESLint
        run: |
          cd starter/backend
          pipenv run lint

  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv install

      - name: Run Tests
        run: |
          cd starter/backend
          pipenv run test 

  build-and-deploy:
    name: Build Backend Docker Image and Deploy to EKS
    runs-on: ubuntu-latest
    needs: 
      - lint
      - test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and tag Docker image  
        run: |
          docker build \
            -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} \
            ./starter/backend

      - name: Push image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    
      - name: Update K8s Deployment in EKS
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name cluster

      - name: Set up Kustomize
        uses: syntaqx/setup-kustomize@v1

      - name: Edit and apply manifests to the cluster
        run: |
          cd starter/backend/k8s
          kustomize edit set image ${{ env.ECR_REPOSITORY }}=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          kustomize build | kubectl apply -f -
      
      